# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Environment Configuration Files
# 环境配置文件 - 包含敏感信息，不应提交到版本控制
NutriGuide/Configuration/Dev.xcconfig
NutriGuide/Configuration/QA.xcconfig
NutriGuide/Configuration/Prod.xcconfig

# 但保留示例文件
!NutriGuide/Configuration/*.xcconfig.example

# API Keys and Secrets
# API 密钥和敏感信息
Config.plist
Secrets.plist
APIKeys.plist

# Local Development
# 本地开发文件
.env
.env.local
.env.development
.env.test
.env.production

# IDE
# IDE 相关文件
.vscode/
.idea/
*.swp
*.swo
*~

# Logs
# 日志文件
*.log
logs/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
# 运行时数据
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
# 测试覆盖率报告
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
# 依赖目录
node_modules/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Custom
# 自定义忽略文件
TODO.md
NOTES.md
.scratch/

# Backup files
# 备份文件
*.backup
*.bak
*.orig

# Archive files
# 压缩文件
*.zip
*.tar.gz
*.rar

# Database files
# 数据库文件
*.sqlite
*.sqlite3
*.db

# Certificate files
# 证书文件
*.p12
*.mobileprovision
*.cer
*.certSigningRequest

# Provisioning profiles
# 配置文件
*.mobileprovision

# App Store Connect API Key
# App Store Connect API 密钥
AuthKey_*.p8

# Firebase
# Firebase 配置文件
GoogleService-Info.plist
google-services.json

# Crashlytics
# Crashlytics 配置
crashlytics-build.properties
fabric.properties

# R.swift
# R.swift 生成的文件
R.generated.swift

# SwiftGen
# SwiftGen 生成的文件
Generated/

# Sourcery
# Sourcery 生成的文件
**/Generated/**

# Mint
# Mint 包管理器
.mint/

docs/
